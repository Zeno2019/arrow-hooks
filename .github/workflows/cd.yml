name: CD

on:
  push:
    branches: [ master ]
    paths:
      - 'package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # 需要读权限来访问 git 历史
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check if version changed
      id: check
      run: |
        # 获取当前版本
        current_version=$(node -p "require('./package.json').version")

        # 获取上一个提交的版本
        git checkout HEAD~1 -- package.json 2>/dev/null || echo "First commit"
        previous_version=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.0.0")

        # 恢复当前版本
        git checkout HEAD -- package.json

        echo "Previous version: $previous_version"
        echo "Current version: $current_version"

        if [ "$current_version" != "$previous_version" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "version=$current_version" >> $GITHUB_OUTPUT
          echo "Version changed from $previous_version to $current_version"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged"
        fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写权限来创建 tags
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: pnpm install

    - name: Type Check
      run: pnpm run type-check

    - name: Run Tests
      run: pnpm run test

    - name: Build
      run: pnpm run build

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create Git Tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag v${{ needs.check-version.outputs.new-version }}
        git push origin v${{ needs.check-version.outputs.new-version }}